<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-34711826-1', 'auto');
  ga('send', 'pageview');
</script>
<script src="YJS.js?0.7546301229824188" type="model" defer></script>
<script src="CS540.js?0.038278373548661704" type="model" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/seedrandom.min.js"></script> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeric/1.2.6/numeric.min.js"></script>
<script src="https://unpkg.com/mathjs@6.1.0/dist/math.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<title>Young Wu's Homepage</title>
<link rel="shortcut icon" href="favicon.ico">
<link rel="stylesheet" href="style540.css" type="text/css">
</head>
<body>
<div id="masthead">
<h1 id="siteName">CS540 Summer 2020 Campus Section</h1>
</div> 
<div id="content">
<script type="module"> import {p5s20e} from "./CS540.js"; p5s20e() </script> <br>
<a href="CS540P4S20C.htm">Previous: P4</a>, <a href="CS540P6S20C.htm">Next: P6</a> <br>
<br>
Back to week 7 page: <a href="CS540W7S20C.htm">Link</a> <br>
<br>
Official Due Date: July 19 <br>
<br>
<h2>Programming Problem Instruction</h2>
&bull; Enter your ID here: <input type="text" id="id" value="" size="20"> and click <button id="button_0">Confirm</button> <span hidden id="questions">1,2,3,4,5,6,7,8,9,10</span> <br>
&bull; The same ID should generate the same set of parameters. Your answers are not saved when you close the browser. You could either copy and paste your console output into the text boxes or print your output to text files (.txt) and load them using the button above the text boxes. <br>
&bull; Please report any bugs on Piazza. <br>
<br>
<h2><span id="id_warning"><font color="red"> Warning: please enter your ID before you start! </font></span></h2>
<br>
&bull; (Introduction) In this programming homework, you create a random maze and compare multiple uninformed and informed search algorithms. <br>
<br>
&bull; (Part 1) Create a \(h\) = <span id="h_0"></span> by \(w\) = <span id="w_0"></span> (height by width) rectangular orthogonal maze by parsing an image from the the Maze Generator: <a href="http://www.mazegenerator.net/" target="_blank">Link</a>. You can also generate a random maze yourself using Recursive Backtracker or one of the Minimum Spanning Tree algorithms (Kruskal or Prim): <a href="https://en.wikipedia.org/wiki/Maze_generation_algorithm" target="_blank">Wikipedia</a> or <a href="http://weblog.jamisbuck.org/2011/2/7/maze-generation-algorithm-recap" target="_blank">Link</a>. Make sure you enter from the center cell of the top row and exit from the center cell of the bottom row. <br>
<br>
&bull; (Part 1) Plot the maze using | for vertical walls and -- for horizontal walls and + for intersections. Below is an 15 by 15 example of such plot and the solution. <br>
Example: <textarea id="example_0" rows="2" cols="20"></textarea> <br>
Solution: <textarea id="solution_0" rows="2" cols="20"></textarea> <br>
<br>
&bull; (Part 1) Use BFS and DFS to get the solution of the maze. Keep track of the cells you searched (checked goal on). <br>
<br>
&bull; (Part 2) Use A* with the heuristic of Manhattan distance to the goal and Euclidean distance to the goal. Keep track of the cells you searched (checked goal on). <br>
<br>
<h2>Submission</h2>
<h2>Question 1 [<span id="total_1">2</span> points]</h2>
&bull; (plot) Enter the plot of the maze (use the same format as the example). <br>
<input type="file", id="plot_input", accept='text/plain'><br><textarea id="plot"></textarea> <br>
<span hidden id="answer_2"></span> <br>
<br>
<h2>Question 2 [<span id="total_2">5</span> points]</h2>
&bull; (succ) Enter the successor matrix of the maze (\(h\) lines, each line containing \(w\) strings, comma separated, each strings represent the list of possible successors, a subset of the characters "U" "D" "L" "R"). <br>
<input type="file", id="succ_input", accept='text/plain'><br><textarea id="succ"></textarea> <br>
<span hidden id="answer_1"></span> <br>
<br>
<h2>Question 3 [<span id="total_3">5</span> points]</h2>
&bull; (solution) Enter the action sequence (one line, a sequence of characters "U" "D" "L" "R", no comma in between them).&nbsp; <br>
&bull; Note: do not start or finish outside the maze. <br>
<input type="file", id="solution_input", accept='text/plain'><br><textarea id="solution"></textarea> <br>
<span hidden id="answer_3"></span> <br>
<br>
<h2>Question 4 [<span id="total_4">5</span> points]</h2>
&bull; (plot_solution) Enter the plot of the maze with the solution (use the same format as the example). <br>
<input type="file", id="plot_solution_input", accept='text/plain'><br><textarea id="plot_solution"></textarea> <br>
<span hidden id="answer_4"></span> <br>
<br>
<h2>Question 5 [<span id="total_5">5</span> points]</h2>
&bull; (bfs) Enter the list of states searched by BFS (\(h\) lines, each line containing \(w\) integers either 0 or 1, 1 means searched, comma separated). <br>
<input type="file", id="bfs_input", accept='text/plain'><br><textarea id="bfs"></textarea> <br>
<button id="button_1">Plot</button> <br>
<canvas id="plot_bfs" width="500" height="500" style="border:1px solid #000000;"></canvas> <span hidden id="plot_bfs_state"> </span> <br>
<span hidden id="answer_5"></span> <br>
<br>
<h2>Question 6 [<span id="total_6">5</span> points]</h2>
&bull; (dfs) Enter the list of states searched by DFS (\(h\) lines, each line containing \(w\) integers either 0 or 1, 1 means searched, comma separated).. <br>
<input type="file", id="dfs_input", accept='text/plain'><br><textarea id="dfs"></textarea> <br>
<button id="button_2">Plot</button> <br>
<canvas id="plot_dfs" width="500" height="500" style="border:1px solid #000000;"></canvas> <span hidden id="plot_dfs_state"> </span> <br>
<span hidden id="answer_6"></span> <br>
<br>
<h2>Question 7 [<span id="total_7">5</span> points]</h2>
&bull; (distances) Enter the Manhattan distances to the goal for each cell in the maze (\(h\) lines, each line containing \(w\) integers, comma separated). <br>
<input type="file", id="distances_input", accept='text/plain'><br><textarea id="distances"></textarea> <br>
<span hidden id="answer_7"></span> <br>
<br>
<h2>Question 8 [<span id="total_8">5</span> points]</h2>
&bull; (a_manhattan) Enter the list of states searched by A* with Manhattan distance to the goal as the heuristic (\(h\) lines, each line containing \(w\) integers either 0 or 1, 1 means searched, comma separated). <br>
<input type="file", id="a_manhattan_input", accept='text/plain'><br><textarea id="a_manhattan"></textarea> <br>
<button id="button_3">Plot</button> <br>
<canvas id="plot_am" width="500" height="500" style="border:1px solid #000000;"></canvas> <span hidden id="plot_am_state"> </span> <br>
<span hidden id="answer_8"></span> <br>
<br>
<h2>Question 9 [<span id="total_9">5</span> points]</h2>
&bull; (a_euclidean) Enter the list of states searched by A* with Euclidean distance to the goal as the heuristic (\(h\) lines, each line containing \(w\) integers either 0 or 1, 1 means searched, comma separated).. <br>
<input type="file", id="a_euclidean_input", accept='text/plain'><br><textarea id="a_euclidean"></textarea> <br>
<button id="button_4">Plot</button> <br>
<canvas id="plot_ae" width="500" height="500" style="border:1px solid #000000;"></canvas> <span hidden id="plot_ae_state"> </span> <br>
<span hidden id="answer_9"></span> <br>
<br>
<h2>Question 10 [<span id="total_10">1</span> points]</h2>
&bull; Please enter any comments and suggestions including possible mistakes and bugs with the questions and the auto-grading, and materials relevant to solving the question that you think are not covered well during the lectures. If you have no comments, please enter "None": do not leave it blank. <br>
&bull; Answer: <textarea id="answer_10" rows="2" cols="20"></textarea>. <br>
<br>
<h2>Grade</h2>
<button id="button_5">Grade</button> <br>
&nbsp;***** ***** ***** ***** *****&nbsp; <br>
<span id="comment"></span> <br>
&nbsp;***** ***** ***** ***** *****&nbsp; <br>
&bull; Warning: grading may take around 5 to 10 seconds. Please be patient and do not click "Grade" multiple times. <br>
<br>
&bull; Please copy and paste the text between the *****s (not including the *****s) and submit it on Canvas, P5. <br>
&bull; Please submit your code and outputs on Canvas, P5S. <br>
&bull; You could also save your output as a single text file using the button <button id="button_6">Download</button> and submit this to P5S (with your code). <br>
&bull; Warning: the load button does not function properly for all questions, please recheck everything after you load. You could load your answers using the button <button id="button_7">Load</button> from the text field: <br>
<input type="file", id="loading_input", accept='text/plain'><br><textarea id="loading"></textarea> <br>
&bull; Saving and loading may take around 5 to 10 seconds. Please be patient and do not click the buttons multiple times. <br>
<br>
<h2>Hints and Solutions (frequently updated)</h2>
&bull; Currently, the grading for checking the searched cells for DFS is very lenient because you can use different tie breaking rule that results in very different expansion paths. <br>
&bull; A maze is valid only if every cell is accessible: for example, you cannot just have a straight path from the entry to the goal. There should not be a region of connected empty cells too, but the grader is not explicitly checking it. <br>
&bull; You could either have U as a successor of the entry cell and D as a successor of the exit cell or not including them as successors. The auto-grader error forcing U and D as successors is fixed. <br>
&bull; For A* search you need to take the sum of the current cost and heuristic (either Manhattan distance or Euclidean distance from the current cell to the goal state).&nbsp; <br>
&bull; It turns out Greedy search is very fast and efficient too, you can try it and plot the searched cells too. The video going through the TA's solution uses Greedy search instead of the A* with Euclidean distance. <br>
&bull; A sample solution in Java and Python is posted below. <br>
Important notes:&nbsp; <br>
(1) Printing the maze using the correct format is not included. <br>
(2) The Euclidean distance A* search code is not included, but you just need to modify the one for the Manhattan distance slightly. <br>
(3) You are allowed to copy and use parts of the TA's solution without attribution. You are allowed to use code from other people and from the Internet, but you must state in the comments clearly where they come from! <br>
<br>
Python code by Hugh Liu: <a href="https://git.doit.wisc.edu/YLIU785/ta540_2020summer/-/tree/master/P5_student_python" target="_blank">Link</a> <br>
Java code by Ainur Ainabekova: <a href="https://git.doit.wisc.edu/AINABEKOVA/cs-540_summer2020/-/tree/master/P5" target="_blank">Link</a>. <br>
<script type="module"> 
import {enter_button, gen_questions, read_file, plot_image_page, grade, download_blanks, load_blanks_page} from "./YJS.js";
document.getElementById("button_0").onclick = () => gen_questions();
document.getElementById("plot_input").onchange = () => read_file(event, "plot");
document.getElementById("succ_input").onchange = () => read_file(event, "succ");
document.getElementById("solution_input").onchange = () => read_file(event, "solution");
document.getElementById("plot_solution_input").onchange = () => read_file(event, "plot_solution");
document.getElementById("bfs_input").onchange = () => read_file(event, "bfs");
document.getElementById("button_1").onclick = () => plot_image_page("@bfs", "@plot_bfs", "@h_0", "@w_0");
document.getElementById("dfs_input").onchange = () => read_file(event, "dfs");
document.getElementById("button_2").onclick = () => plot_image_page("@dfs", "@plot_dfs", "@h_0", "@w_0");
document.getElementById("distances_input").onchange = () => read_file(event, "distances");
document.getElementById("a_manhattan_input").onchange = () => read_file(event, "a_manhattan");
document.getElementById("button_3").onclick = () => plot_image_page("@a_manhattan", "@plot_am", "@h_0", "@w_0");
document.getElementById("a_euclidean_input").onchange = () => read_file(event, "a_euclidean");
document.getElementById("button_4").onclick = () => plot_image_page("@a_euclidean", "@plot_ae", "@h_0", "@w_0");
document.getElementById("button_5").onclick = () => grade();
document.getElementById("button_6").onclick = () => download_blanks("@id;@plot;@succ;@solution;@plot_solution;@bfs;@dfs;@distances;@a_manhattan;@a_euclidean;@answer_10", "P5");
document.getElementById("button_7").onclick = () => load_blanks_page("@loading");
document.getElementById("loading_input").onchange = () => read_file(event, "loading");
</script><br>
<br>
<br>
<br>
<br>
<font color="grey" size = 2> Last Updated: May 27, 2021 at 10:28 PM</font><br>
<br>
</div>
<div id="primarynavarea">
<ul id="primarynav">
<li><a href="CS540S20C.htm"><span class="secondcolor"><strong>Home</strong></span></a></li>
<ul id="primarynavsub">
<li><a href="CS540W1S20C.htm">Week 1 </a></li>
<li><a href="CS540W2S20C.htm">Week 2 </a></li>
<li><a href="CS540W3S20C.htm">Week 3 </a></li>
<li><a href="CS540W5S20C.htm">Week 5 </a></li>
<li><a href="CS540W6S20C.htm">Week 6 </a></li>
<li><a href="CS540W7S20C.htm">Week 7 </a></li>
</ul>
<li><a href="CS540W4S20C.htm">Midterm </a></li>
<li><a href="CS540W8S20C.htm">Final </a></li>
</ul>
</div>
<div id="siteInfo">&nbsp;<img style="width: 191px; height: 65px;" alt="" src="image003.png">
</div>
</body>
</html>
