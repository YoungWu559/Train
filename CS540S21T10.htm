<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-34711826-1', 'auto');
  ga('send', 'pageview');
</script>
<script src="YJS.js?0.9780910506535593" type="module" defer></script>
<script src="CS540.js?0.07893746184212902" type="module" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/seedrandom.min.js"></script> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeric/1.2.6/numeric.min.js"></script>
<script src="https://unpkg.com/mathjs@6.1.0/dist/math.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<title>Young Wu's Homepage</title>
<link rel="shortcut icon" href="favicon.ico">
<link rel="stylesheet" href="style540.css" type="text/css">
</head>
<body>
<div id="masthead">
<h1 id="siteName">CS540 Summer 2021</h1>
</div> 
<div id="content">

<script type="module"> import {m10s21} from "./CS540.js"; m10s21() </script> <br>
<script type="module"> import {expand_all} from "./YJS.js"; expand_all() </script> <br>
Prev: <a href="CS540S21T9.htm">M9</a> Next: <a href="CS540S21T11.htm">M11</a> <br>
Back to week 6 page: <a href="CS540S21W6.htm">Link</a> <br>
<br>
<h2><font color="red"> Warning: this is a replica of the homework page for testing purposes, please use <a href="CS540S21M10.htm">M10</a> for homework submission. </font><br></h2>
<br>
<h2>T10 Written (Math) Problems</h2>
&bull; Enter your ID (the wisc email ID without @wisc.edu) here: <input type="text" id="id" value="test" size="20"> and click <button id="button_0">Confirm</button> (or hit enter key) <span hidden id="questions">1,2,3,4,5,6,7,8,9,10</span> <span hidden id="assignment">m10</span> <br>
&bull; The same ID should generate the same set of questions. Your answers are not saved when you close the browser. You could print the page: <button id="button_1">Print</button>, solve the problems, then enter all your answers at the end. <br>
&bull; Please do not refresh the page: your answers will not be saved. <br>
<br>
<h2><span id="id_warning"><font color="red"> Warning: please enter your ID before you start! </font></span></h2>
<br>
<h2>Question 1</h2>
<span id="p1"></span> <br>
<h2>Question 2</h2>
<span id="p2"></span> <br>
<h2>Question 3</h2>
<span id="p3"></span> <br>
<h2>Question 4</h2>
<span id="p4"></span> <br>
<h2>Question 5</h2>
<span id="p5"></span> <br>
<h2>Question 6</h2>
<span id="p6"></span> <br>
<h2>Question 7</h2>
<span id="p7"></span> <br>
<h2>Question 8</h2>
<span id="p8"></span> <br>
<h2>Question 9</h2>
<span id="p9"></span> <br>
<h2>Question 10</h2>
<span id="p10"></span> <br>
<div id="q1">
&bull; [<span id="total_1">3</span> points] If \(h_{1}\) and \(h_{2}\) are both admissible heuristic functions, which ones of following are also admissible heuristic functions? <br>
<details>
<summary>Hint</summary>
See Fall 2019 Midterm Q4, Fall 2018 Midterm Q5, Spring 2018 Midterm Q2, Fall 2006 Final Q3, Fall 2006 Midterm Q7, Fall 2005 Final Q3, Fall 2005 Midterm Q2. Since \(h_{1}\) and \(h_{2}\) are admissible, for any \(n\), \(0 \leq&nbsp; h_{1}\left(n\right) \leq&nbsp; h^\star \left(n\right)\) and \(0 \leq&nbsp; h_{2}\left(n\right) \leq&nbsp; h^\star \left(n\right)\). It means if \(0 \leq&nbsp; h_{3}\left(n\right) \leq&nbsp; h_{1}\left(n\right)\) or \(0 \leq&nbsp; h_{3}\left(n\right) \leq&nbsp; h_{2}\left(n\right)\), then it must be true that \(0 \leq&nbsp; h_{3}\left(n\right) \leq&nbsp; h^\star \left(n\right)\), i.e. \(h_{3}\) is also admissible. <br>
</details>
&bull; Choices: <br>
<input type="checkbox" id="answer1_1" name = "none" value = "answer1_1"> <span id="choice1_1"></span> <br>
<input type="checkbox" id="answer2_1" name = "none" value = "answer2_1"> <span id="choice2_1"></span> <br>
<input type="checkbox" id="answer3_1" name = "none" value = "answer3_1"> <span id="choice3_1"></span> <br>
<input type="checkbox" id="answer4_1" name = "none" value = "answer4_1"> <span id="choice4_1"></span> <br>
<input type="checkbox" id="answer5_1" name = "none" value = "answer5_1"> <span id="choice5_1"></span> <br>
<input type="checkbox" id="answer6_1" name = "none" value = "answer6_1"> None of the above <br>
</div>
<div id="q2">
&bull; [<span id="total_2">3</span> points] Let \(h_{1}\) be an admissible heuristic from a state to the optimal goal, A* search with which ones of the following \(h\) will <span id="never_2"></span> be admissible? <br>
<details>
<summary>Hint</summary>
See Fall 2018 Midterm Q6, Fall 2017 Midterm Q10. Since \(h_{1}\) is admissible, for any \(n\), \(0 \leq&nbsp; h_{1}\left(n\right) \leq&nbsp; h^\star \left(n\right)\). It means if \(0 \leq&nbsp; h\left(n\right) \leq&nbsp; h_{1}\left(n\right)\), then it must be true that \(0 \leq&nbsp; h\left(n\right) \leq&nbsp; h^\star \left(n\right)\), i.e. \(h\) is always admissible. Since \(h^\star \) can be arbitrarily large, only when \(h(n) < 0\) for some \(n\) or when \(h\left(0\right) \neq&nbsp; 0\), \(h\) is never admissible. <br>
</details>
&bull; Choices: <br>
<input type="checkbox" id="answer1_2" name = "none" value = "answer1_2"> <span id="choice1_2"></span> <br>
<input type="checkbox" id="answer2_2" name = "none" value = "answer2_2"> <span id="choice2_2"></span> <br>
<input type="checkbox" id="answer3_2" name = "none" value = "answer3_2"> <span id="choice3_2"></span> <br>
<input type="checkbox" id="answer4_2" name = "none" value = "answer4_2"> <span id="choice4_2"></span> <br>
<input type="checkbox" id="answer5_2" name = "none" value = "answer5_2"> <span id="choice5_2"></span> <br>
<input type="checkbox" id="answer6_2" name = "none" value = "answer6_2"> None of the above <br>
</div>
<div id="q3">
&bull; [<span id="total_3">3</span> points] Let \(h_{1}\) be an admissible heuristic from a state to the optimal goal, A* search with which ones of the following \(h\) will <span id="never_3"></span> be admissible? <br>
<details>
<summary>Hint</summary>
See Fall 2018 Midterm Q6, Fall 2017 Midterm Q10. Since \(h_{1}\) is admissible, for any \(n\), \(0 \leq&nbsp; h_{1}\left(n\right) \leq&nbsp; h^\star \left(n\right)\). It means if \(0 \leq&nbsp; h\left(n\right) \leq&nbsp; h_{1}\left(n\right)\), then it must be true that \(0 \leq&nbsp; h\left(n\right) \leq&nbsp; h^\star \left(n\right)\), i.e. \(h\) is always admissible. Since \(h^\star \) can be arbitrarily large, only when \(h(n) < 0\) for some \(n\) or when \(h\left(0\right) \neq&nbsp; 0\), \(h\) is never admissible. <br>
</details>
&bull; Choices: <br>
<input type="checkbox" id="answer1_3" name = "none" value = "answer1_3"> <span id="choice1_3"></span> <br>
<input type="checkbox" id="answer2_3" name = "none" value = "answer2_3"> <span id="choice2_3"></span> <br>
<input type="checkbox" id="answer3_3" name = "none" value = "answer3_3"> <span id="choice3_3"></span> <br>
<input type="checkbox" id="answer4_3" name = "none" value = "answer4_3"> <span id="choice4_3"></span> <br>
<input type="checkbox" id="answer5_3" name = "none" value = "answer5_3"> <span id="choice5_3"></span> <br>
<input type="checkbox" id="answer6_3" name = "none" value = "answer6_3"> None of the above <br>
</div>
<div id="q4">
&bull; [<span id="total_4">2</span> points] Let the states be 2D integer points with integer coordinates \((i, j)\) with boundary constrains <span id="cons1_4"></span> and <span id="cons2_4"></span>. Each state \((i, j)\) has four successors \((i - 1, j), \left(i + 1, j\right), \left(i, j - 1\right), \left(i, j + 1\right)\) or a subset thereof subject to the boundary constraints. The score of state \((i, j)\) is <span id="score_4"></span>. Which local minimum will be reached if hill climbing is used starting from <span id="init_4"></span>? <br>
<details>
<summary>Hint</summary>
See Fall 2017 Midterm Q9. Due to the convexity of the function, hill climbing will eventually reach the global minimum. If the coefficient in front of \(i\) (or \(j\)) is positive, then \(i\) (or \(j\)) should be as small as possible at the global minimum. If the coefficient in front of \(i\) (or \(j\)) is negative, then \(i\) (or \(j\)) should be as large as possible at the global minimum. <br>
</details>
&bull; Answer (comma separated vector): <input type="text" id="answer_4" value="" size="20">. <br>
</div>
<div id="q5">
&bull; [<span id="total_5">2</span> points] In simulated annealing one accepts a transition from \(s\) to an inferior neighbor \(t\) with probability \(\exp\left(\dfrac{- \left| f\left(s\right) - f\left(t\right) \right|}{T}\right)\), where \(T\) is the temperature parameter. Suppose \(f(s)\) = <span id="fs_5"></span> and \(f(t)\) = <span id="ft_5"></span>. At what temperature is the transition probability <span id="p_5"></span>? <br>
<details>
<summary>Hint</summary>
See Fall 2018 Midterm Q10. Solve \(\exp\left(\dfrac{- \left| f\left(s\right) - f\left(t\right) \right|}{T}\right) = p\) for \(T\). <br>
</details>
&bull; Answer: <input type="text" id="answer_5" value="" size="20">. <button id="button_2">Calculate</button> <span id="calc_5"></span> <br>
</div>
<div id="q6">
&bull; [<span id="total_6">2</span> points] In simulated annealing we move from \(s\) to an inferior neighbor \(t\) with probability \(\exp\left(\dfrac{- \left| f\left(s\right) - f\left(t\right) \right|}{T}\right)\), where \(T\) is the temperature parameter. Suppose \(f(s)\) = <span id="fs_6"></span> and \(f(t)\) = <span id="ft_6"></span> and \(T\) = <span id="T_6"></span>. What is the probability we stay at \(s\) instead of moving to \(t\)? <br>
&bull; Note: we are minimizing the score. <br>
<details>
<summary>Hint</summary>
See Fall 2017 Midterm Q11. If \(f(s) > f\left(t\right)\), the probability of leaving is 1. If \(f(s) \leq&nbsp; f\left(t\right)\), the probability of leaving is \(\exp\left(\dfrac{- \left| f\left(s\right) - f\left(t\right) \right|}{T}\right)\). The probability of staying is 1 minus the probability of leaving. <br>
</details>
&bull; Answer: <input type="text" id="answer_6" value="" size="20">. <button id="button_3">Calculate</button> <span id="calc_6"></span> <br>
</div>
<div id="q7">
&bull; [<span id="total_7">2</span> points] Consider the following version of hill climbing: at initial state \(s\) we randomly choose one of \(s\)'s neighbors with equal probability. If the chosen neighbor has a strictly better score than \(s\) we move to the neighbor; otherwise we stay at \(s\). Assume \(s\) has <span id="n_7"></span> neighbors, and only <span id="nb_7"></span> of the neighbors has a strictly better score than \(s\). What is the chance that we move out of \(s\) in <span id="T_7"></span> iterations or less? <br>
<details>
<summary>Hint</summary>
See Fall 2016 Midterm Q6. The probability of moving out is 1 minus the probability of staying (seeing a worse neighbor) in all \(T\) iterations. <br>
</details>
&bull; Answer: <input type="text" id="answer_7" value="" size="20">. <button id="button_4">Calculate</button> <span id="calc_7"></span> <br>
</div>
<div id="q8">
&bull; [<span id="total_8">3</span> points] Individuals (i.e. candidate solutions) in the current generation are given by <span id="n_8"></span>-digit sequences: <span id="ex_8"></span> = <span id="s1_8"></span>, <span id="s2_8"></span>, <span id="s3_8"></span>, <span id="s4_8"></span>. The fitness function is <span id="fit_8"></span>. What is the result of performing 1-point crossover for the sequences with the highest fitness (break ties by preferring the sequence that appears earlier in the list) with a cross-point between digit <span id="d1_8"></span> and digit <span id="d2_8"></span>. <br>
&bull; Note: the first line representing the first child should start with the sequence with the highest fitness, and the second line representing the second child should start with the sequence with the second highest fitness. <br>
&bull; In case you need a calculator: <input type="text" id="calculator_8" value="" size="20">. <button id="button_5">Calculate</button> <br>
<details>
<summary>Hint</summary>
See Spring 2017 Midterm Q2. Compute the fitness of all four sequences and find the two with the highest fitness say \(d^{\left(1\right)}, d^{\left(2\right)}\). The crossover of the two sequences between digits \(i\) and \(i + 1\) are \(d^{\left(1\right)}_{1}, ..., d^{\left(1\right)}_{i}, d^{\left(2\right)}_{i+1}, ..., d^{\left(2\right)}_{6}\) and \(d^{\left(2\right)}_{1}, ..., d^{\left(2\right)}_{i}, d^{\left(1\right)}_{i+1}, ..., d^{\left(1\right)}_{6}\). <br>
</details>
&bull; Answer (matrix with 2 lines, each line is a comma separated vector): <textarea id="answer_8" rows="2" cols="20"></textarea>.&nbsp; <br>
</div>
<div id="q9">
&bull; [<span id="total_9">3</span> points] Consider a state space where the states are positive integers between 1 and <span id="bound_9"></span>. State \(i\) has two neighbors \(i - 1\) and \(i + 1\) (subject to the boundary constraints). State \(i\) has score <span id="score_9"></span>. If one runs the hill climbing algorithm, how many initial states can reach the global minimum? Break tie by moving towards the global minimum. If there are multiple global minima, count all of them. <br>
<details>
<summary>Hint</summary>
See Fall 2017 Midterm Q8. Try to solve the problem with a small \(n\) and find the pattern. Alternatively, start with the global minimum \(i^\star \), keep count the states while \(s(i - 1) \geq&nbsp; s\left(i\right), i < i^\star \) or \(s(i + 1) \geq&nbsp; s\left(i\right), i > i^\star \). <br>
</details>
&bull; Answer: <input type="text" id="answer_9" value="" size="20">. <br>
</div>
<div id="q10">
&bull; [<span id="total_10">1</span> points] Please enter any comments and suggestions including possible mistakes and bugs with the questions and the auto-grading, and materials relevant to solving the questions that you think are not covered well during the lectures. If you have no comments, please enter "None": do not leave it blank. <br>
&bull; Answer: <textarea id="answer_10" rows="2" cols="20"></textarea>. <br>
</div>
<br>
<h2>Grade</h2>
<button id="button_6">Grade</button> <br>
&nbsp;***** ***** ***** ***** *****&nbsp; <br>
<span id="comment"></span> <br>
&nbsp;***** ***** ***** ***** ***** <br>
<br>
<textarea id="output" rows="4" cols="40"></textarea> <br>
&bull; You could save the text in the above text box to a file using the button <button id="button_7">Download</button> or copy and paste it into a file yourself <button id="button_8">Copy</button>. <br>
&bull; You could load your answers from the text (or txt file) in the text box below using the button <button id="button_9">Load</button>. The first two lines should be "##m: 10" and "##id: your id", and the format of the remaining lines should be "##1: your answer to question 1" newline "##2: your answer to question 2", etc. Please make sure that your answers are loaded correctly before submitting them. <br>
<input type="file", id="loading_input", accept='text/plain'><br><textarea id="loading"></textarea> <br>
<script type="module"> 
import {enter_button, gen_questions, math_eval_page, grade, download_file, clipboard, load_ans_page, read_file} from "./YJS.js";
document.getElementById("button_0").onclick = () => gen_questions();
enter_button("@id", "button_0");
document.getElementById("button_1").onclick = () => window.print();
document.getElementById("button_2").onclick = () => math_eval_page("@answer_5", "@calc_5");
enter_button("@answer_5", "button_2");
document.getElementById("button_3").onclick = () => math_eval_page("@answer_6", "@calc_6");
enter_button("@answer_6", "button_3");
document.getElementById("button_4").onclick = () => math_eval_page("@answer_7", "@calc_7");
enter_button("@answer_7", "button_4");
document.getElementById("button_5").onclick = () => math_eval_page("@calculator_8");
document.getElementById("button_6").onclick = () => grade();
document.getElementById("button_7").onclick = () => download_file("@output", "M10");
document.getElementById("button_8").onclick = () => clipboard("@output");
document.getElementById("button_9").onclick = () => load_ans_page("@loading");
document.getElementById("loading_input").onchange = () => read_file(event, "loading");
</script><br>
<br>
<br>
<br>
<br>
<font color="grey" size = 2> Last Updated: July 23, 2021 at 6:08 PM</font><br>
<br>
</div>
<div id="primarynavarea">
<ul id="primarynav">
<li><a href="CS540S21.htm"><span class="secondcolor"><strong>Home</strong></span></a></li>
<ul id="primarynavsub">
<li><a href="CS540S21W1.htm">Week 1 </a></li>
<li><a href="CS540S21W2.htm">Week 2 </a></li>
<li><a href="CS540S21W3.htm">Week 3 </a></li>
<li><a href="CS540S21W5.htm">Week 5 </a></li>
<li><a href="CS540S21W6.htm">Week 6 </a></li>
<li><a href="CS540S21W7.htm">Week 7 </a></li>
</ul>
<li><a href="CS540S21W4.htm">Midterm </a></li>
<li><a href="CS540S21W8.htm">Final </a></li>
</ul>
</div>
<div id="siteInfo">&nbsp;<img style="width: 191px; height: 65px;" alt="" src="image003.png">
</div>
</body>
</html>

