<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-34711826-1', 'auto');
  ga('send', 'pageview');
</script>
<script src="YJS.js?0.1177178093291924" type="model" defer></script>
<script src="CS540.js?0.9858374388812213" type="model" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/seedrandom.min.js"></script> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeric/1.2.6/numeric.min.js"></script>
<script src="https://unpkg.com/mathjs@6.1.0/dist/math.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<title>Young Wu's Homepage</title>
<link rel="shortcut icon" href="favicon.ico">
<link rel="stylesheet" href="style540.css" type="text/css">
</head>
<body>
<div id="masthead">
<h1 id="siteName">CS540 Summer 2020 Epic Section</h1>
</div> 
<div id="content">
<script type="module"> import {p4s20e} from "./CS540.js"; p4s20e() </script> <br>
<a href="CS540P3S20E.htm">Previous: P3</a>, <a href="CS540P5S20E.htm">Next: P5</a> <br>
<br>
Back to week 9 page: <a href="CS540W9S20E.htm">Link</a> <br>
<br>
Official Due Date: August 1 <br>
<br>
<h2>Programming Problem Instruction</h2>
&bull; Enter your ID here: <input type="text" id="id" value="" size="20"> and click <button id="button_0">Confirm</button> <span hidden id="questions">1,2,3,4,5,6,7,8,9,10</span> <br>
&bull; The same ID should generate the same set of parameters. Your answers are not saved when you close the browser. You could either copy and paste your console output into the text boxes or print your output to text files (.txt) and load them using the button above the text boxes. <br>
&bull; Please report any bugs on Piazza. <br>
<br>
<h2><span id="id_warning"><font color="red"> Warning: please enter your ID before you start! </font></span></h2>
<br>
&bull; (Introduction) In this programming homework, you cluster countries into groups with the COVID-19 dataset. You will estimate parametric models of virus spread and cluster the countries using these parameters as features. <br>
<br>
&bull; (Part 1) Download the COVID-19 global deaths dataset from Johns Hopkins University: <a href="https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series" target="_blank">Link</a>. It is okay if you use another similar time-series datasets on COVID-19 deaths that you trust. Alternatively, you could also remove rows corresponding to countries that you believe are reporting false data. Combine the rows (add up the numbers) for the same country. <br>
<br>
&bull; (Part 1) Estimate a parametric model that describes the trend. There should be at least 3 parameters, but preferably less than 10. For a more accurate model, you should divide the number of deaths by the total population of the country, but this is optional for this homework. <br>
(1) One example is to fit a three-parameter logistic curve: <a href="https://en.wikipedia.org/wiki/Logistic_function" target="_blank">Wikipedia</a>. Note that this is not a logistic regression. You could use gradient descent to minimize the squared error loss, or look into non-linear least squares using Newton's methods if you are interested in general curve fitting techniques. <br>
(2) Another example is to fit a three-parameter normal distribution (on the time-differenced data): <a href="https://en.wikipedia.org/wiki/Generalized_normal_distribution" target="_blank">Wikipedia</a>. You could use maximum likelihood estimation, or perhaps simpler, look into the method of moments if you learned it from a statistics course. <br>
(3) Another example is to directly estimate the growth rates by counting the number of days to double, quadruple, and octuple: see Professor Zhu's Ten Hundred Plot for a two-parameter version: <a href="https://www.youtube.com/watch?v=NP3ZdQwrL_Q&t=0s" target="_blank">Link</a>. <br>
(4) Other reasonable or creative models are acceptable as long as it is not something trivial like "use the last three numbers in the row" or "count the number of days cases increase more than 10, 100, 1000" or something similar to the TA's solution. <br>
<br>
&bull; (Part 2) Use hierarchical clustering with single and complete linkages to cluster the countries into \(k\) = <span id="nc_0"></span> clusters based on their parameter values. Use Euclidean distance. <br>
<br>
&bull; (Part 2) Use k-means clustering to cluster the countries into the same number of clusters based on their parameter values. Compute final the cluster centers and the total distortion. Use Euclidean distance. <br>
<br>
<h2>Submission</h2>
<h2>Question 1 [<span id="total_1">1</span> points]</h2>
&bull; (original) Enter the cumulative time series for the US and Canada (remember to add up the numbers from each state or province) (two lines, each line containing integers, comma separated). <br>
<input type="file", id="original_input", accept='text/plain'><br><textarea id="original"></textarea> <br>
<span hidden id="answer_1"></span> <br>
<br>
<h2>Question 2 [<span id="total_2">2</span> points]</h2>
&bull; (difference) Enter the differenced time series for the US and Canada (compute the difference between consecutive numbers in the previous question, here, this time series represents the number of additional deaths each day) (two lines, each line containing integers, one less than the number of integers per line in the previous question, comma separated). <br>
<input type="file", id="difference_input", accept='text/plain'><br><textarea id="difference"></textarea> <br>
<span hidden id="answer_2"></span> <br>
<br>
<h2>Question 3 [<span id="total_3">5</span> points]</h2>
&bull; Briefly explain the method you use to obtain the parameters. (Auto-grade will assign 5/5 for anything you enter, but I will go through them manually after the final exam to check if it is something trivial.) <br>
<textarea id="answer_3" rows="2" cols="20"></textarea> <br>
<br>
<h2>Question 4 [<span id="total_4">5</span> points]</h2>
&bull; (parameters) Input the parameter estimates as a matrix, one row for each country (more than 100 less than 200 lines, each line contains at least 3 numbers, comma separated, rounded to 2 decimal places). Call the number of row \(n\) and the number of columns \(m\) for later questions. Please do not include an index column or a column with country names etc. <br>
<input type="file", id="parameters_input", accept='text/plain'><br><textarea id="parameters"></textarea> <br>
<span hidden id="answer_4"></span> <br>
<br>
<h2>Question 5 [<span id="total_5">10</span> points]</h2>
&bull; (hacs) Input the clusters from single linkage hierarchical clustering (one line containing \(n\) integers from \(0\) to the \(k-1\), comma separated). <br>
<input type="file", id="hacs_input", accept='text/plain'><br><textarea id="hacs"></textarea> <br>
<span hidden id="answer_5"></span> <br>
<br>
<h2>Question 6 [<span id="total_6">10</span> points]</h2>
&bull; (hacc) Input the clusters from complete linkage hierarchical clustering (one line containing \(n\) integers from \(0\) to the \(k-1\), comma separated). <br>
<input type="file", id="hacc_input", accept='text/plain'><br><textarea id="hacc"></textarea> <br>
<span hidden id="answer_6"></span> <br>
<br>
<h2>Question 7 [<span id="total_7">10</span> points]</h2>
&bull; (kmeans) Input the clusters from k means clustering (one line containing \(n\) integers from \(0\) to the \(k-1\), comma separated). <br>
<input type="file", id="kmeans_input", accept='text/plain'><br><textarea id="kmeans"></textarea> <br>
<span hidden id="answer_7"></span> <br>
<br>
<h2>Question 8 [<span id="total_8">5</span> points]</h2>
&bull; (centers) Enter the cluster centers from k means clustering (\(k\) lines, each line containing \(m\) numbers, comma separated, rounded to 4 decimal places). <br>
<input type="file", id="centers_input", accept='text/plain'><br><textarea id="centers"></textarea> <br>
<span hidden id="answer_8"></span> <br>
<br>
<h2>Question 9 [<span id="total_9">5</span> points]</h2>
&bull; Enter the total distortion (use sum of squared distances) of the clustering from the previous two questions. <br>
<textarea id="answer_9" rows="2" cols="20"></textarea> <br>
<br>
<h2>Question 10 [<span id="total_10">1</span> points]</h2>
&bull; Please enter any comments and suggestions including possible mistakes and bugs with the questions and the auto-grading, and materials relevant to solving the question that you think are not covered well during the lectures. If you have no comments, please enter "None": do not leave it blank. <br>
&bull; Answer: <textarea id="answer_10" rows="2" cols="20"></textarea>. <br>
<br>
<h2>Grade</h2>
<button id="button_1">Grade</button> <br>
&nbsp;***** ***** ***** ***** *****&nbsp; <br>
<span id="comment"></span> <br>
&nbsp;***** ***** ***** ***** *****&nbsp; <br>
&bull; Warning: grading may take around 10 to 20 seconds. Please be patient and do not click "Grade" multiple times. <br>
<br>
&bull; Please copy and paste the text between the *****s (not including the *****s) and submit it on Canvas, P4. <br>
&bull; Please submit your code and outputs on Canvas, P4S. <br>
&bull; You could also save your output as a single text file using the button <button id="button_2">Download</button> and submit this to P4S (with your code). <br>
&bull; Warning: the load button does not function properly for all questions, please recheck everything after you load. You could load your answers using the button <button id="button_3">Load</button> from the text field: <br>
<input type="file", id="loading_input", accept='text/plain'><br><textarea id="loading"></textarea> <br>
&bull; Saving and loading may take around 5 to 10 seconds. Please be patient and do not click the buttons multiple times. <br>
<br>
<h2>Hints and Solutions (frequently updated)</h2>
&bull; Tie breaking rules likely won't matter, but auto-grader does prefer using the same rules described in M8. <br>
&bull; Question 8 is graded based on Question 7, so make sure you recompute the centers based on the clusters in Question 7. <br>
&bull; Question 9 depends on Questions 7 and 8, please make sure that all points are reassigned according to the cluster centers in Questions 8. <br>
&bull; Questions 5, 6, 7 are graded based on adjusted rand index, as a result, tie breaking rules and permutation of indices should not matter. Details about rand index: <a href="https://en.wikipedia.org/wiki/Rand_index" target="_blank">Wikipedia</a>. <br>
&bull; A sample solution in Java and Python is posted below. <br>
Important notes:&nbsp; <br>
(1) The complete linkage and Euclidean distance versions are not included. <br>
(2) The total distortion should be computed by sum of squared Euclidean distances to the centers. <br>
(3) You are allowed to copy and use parts of the TA's solution without attribution. You are allowed to use code from other people and from the Internet, but you must state in the comments clearly where they come from! <br>
<br>
Python code by Hugh Liu: <a href="https://git.doit.wisc.edu/YLIU785/ta540_2020summer/-/tree/master/P4_student_python" target="_blank">Link</a> <br>
Java code by Ainur Ainabekova: <a href="https://git.doit.wisc.edu/AINABEKOVA/cs-540_summer2020/-/tree/master/P4" target="_blank">Link</a>. <br>
<script type="module"> 
import {enter_button, gen_questions, read_file, grade, download_blanks, load_blanks_page} from "./YJS.js";
document.getElementById("button_0").onclick = () => gen_questions();
document.getElementById("original_input").onchange = () => read_file(event, "original");
document.getElementById("difference_input").onchange = () => read_file(event, "difference");
document.getElementById("parameters_input").onchange = () => read_file(event, "parameters");
document.getElementById("hacs_input").onchange = () => read_file(event, "hacs");
document.getElementById("hacc_input").onchange = () => read_file(event, "hacc");
document.getElementById("kmeans_input").onchange = () => read_file(event, "kmeans");
document.getElementById("centers_input").onchange = () => read_file(event, "centers");
document.getElementById("button_1").onclick = () => grade();
document.getElementById("button_2").onclick = () => download_blanks("@id;@original;@difference;@answer_3;@parameters;@hacs;@hacc;@kmeans;@centers;@answer_9;@answer_10", "P4");
document.getElementById("button_3").onclick = () => load_blanks_page("@loading");
document.getElementById("loading_input").onchange = () => read_file(event, "loading");
</script><br>
<br>
<br>
<br>
<br>
<font color="grey" size = 2> Last Updated: May 27, 2021 at 10:24 PM</font><br>
<br>
</div>
<div id="primarynavarea">
<ul id="primarynav">
<li><a href="CS540S20E.htm"><span class="secondcolor"><strong>Home</strong></span></a></li>
<ul id="primarynavsub">
<li><a href="CS540W1S20E.htm">Week 1 </a></li>
<li><a href="CS540W2S20E.htm">Week 2 </a></li>
<li><a href="CS540W3S20E.htm">Week 3 </a></li>
<li><a href="CS540W4S20E.htm">Week 4 </a></li>
<li><a href="CS540W5S20E.htm">Week 5 </a></li>
<li><a href="CS540W6S20E.htm">Week 6 </a></li>
<li><a href="CS540W7S20E.htm">Week 7 </a></li>
<li><a href="CS540W9S20E.htm">Week 9 </a></li>
<li><a href="CS540W10S20E.htm">Week 10 </a></li>
<li><a href="CS540W11S20E.htm">Week 11 </a></li>
<li><a href="CS540W12S20E.htm">Week 12 </a></li>
<li><a href="CS540W13S20E.htm">Week 13 </a></li>
</ul>
<li><a href="CS540W8S20E.htm">Midterm </a></li>
<li><a href="CS540W14S20E.htm">Final </a></li>
</ul>
</div>
<div id="siteInfo">&nbsp;<img style="width: 191px; height: 65px;" alt="" src="image003.png">
</div>
</body>
</html>
