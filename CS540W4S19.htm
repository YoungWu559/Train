<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-34711826-1', 'auto');
  ga('send', 'pageview');
</script>
<script src="YJS.js?0.877631018196338" type="model" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeric/1.2.6/numeric.min.js"></script>
<script src="https://unpkg.com/mathjs@6.1.0/dist/math.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<title>Young Wu's Homepage</title>
<link rel="shortcut icon" href="favicon.ico">
<link rel="stylesheet" href="style540.css" type="text/css">
</head>
<body>
<div id="masthead">
<h1 id="siteName">CS540 Summer 2019</h1>
</div> 
<div id="content">
<a href="CS540W3S19.htm">Prev: W3</a> ; <a href="CS540W5S19.htm">Next: W5</a> <br>
<br>
<h2>Lecture Note</h2>
&bull; Slides <br>
Lecture 7: <a href="CS540/CS540_Lecture_7_P.pdf">Slides</a>, <a href="CS540/CS540_Lecture_7_C.pdf">With Quiz</a> <br>
Lecture 8: <a href="https://git.doit.wisc.edu/DANDI.CHEN/cs540_2019summer/blob/master/CS540_Lecture8.pdf" target="_blank">Link</a> <br>
Annotated Lecture 7 Section 1: <a href="CS540/CS540_Lecture_7_C1.pdf">Slides</a> <br>
Annotated Week 4 Section 2: <a href="CS540/CS540_Lecture_7_C2.pdf">Part I</a>, <a href="CS540/CS540_Lecture_8_C2.pdf">Part II</a> <br>
<br>
&bull; Websites <br>
Conv Net on MNIST: <a href="https://cs.stanford.edu/people/karpathy/convnetjs/demo/mnist.html" target="_blank">Link</a> <br>
Conv Net Vis: <a href="http://scs.ryerson.ca/~aharley/vis/" target="_blank">Link</a>, Open in FireFox <br>
LeNet: <a href="http://yann.lecun.com/exdb/lenet/" target="_blank">Link</a> <br>
Image Filter: <a href="http://setosa.io/ev/image-kernels/" target="_blank">Link</a> <br>
Canny Edge Detection: <a href="http://bigwww.epfl.ch/demo/ip/demos/edgeDetector/" target="_blank">Link</a> <br>
<br>
&bull; Paper References&nbsp; <br>
SIFT: <a href="https://www.cs.ubc.ca/~lowe/papers/ijcv04.pdf" target="_blank">PDF</a> <br>
HOG: <a href="https://lear.inrialpes.fr/people/triggs/pubs/Dalal-cvpr05.pdf" target="_blank">PDF</a> <br>
LeNet: <a href="http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf" target="_blank">PDF</a> <br>
Google Inception Net: <a href="https://storage.googleapis.com/pub-tools-public-publication-data/pdf/43022.pdf" target="_blank">PDF</a> <br>
<br>
&bull; YouTube videos <br>
How to find the HOG features? <a href="https://youtu.be/Zv0FIWAzp64" target="_blank">Link</a> <br>
How to count the number of weights for training for a convolutional neural network (LeNet)? <a href="https://youtu.be/p9PFGB97S3Q" target="_blank">Link</a> <br>
Example (Quiz): How to find the 2D convolution between two matrices? <a href="https://youtu.be/uvgwo1RuzJ8" target="_blank">Link</a> <br>
Example (Homework): How to find a discrete approximate Gausian filter? <a href="https://youtu.be/3z3GDUFR4Lw" target="_blank">Link</a> <br>
<br>
<h2>Written (Math) Problems</h2>
Submit on Canvas: <a href="CS540/CS540_M4.pdf">PDF</a> <br>
<br>
<h2>Programming Problem</h2>
&bull; Short Instruction <br>
(1) Download the images from the list of <a href="https://www.cs.wisc.edu/people/faculty/" target="_blank">Faculty</a> of the CS department based on your wisc ID. (Right click the page, not the images, save as ..., select Webpage, Complete (*.htm, *.html) You can download an extra one you like to experiment on. <br>
Type in your ID: <input type="text", id="id"> <button onclick="get()">GO</button><br>
<span id="out">Download the images of the following faculty members: </span><br>&nbsp; <br>
<script>
function get() <br>
{ <br>
&nbsp; let list = "ADITYA AKELLA,AWS ALBARGHOUTHI,ANDREA ARPACI-DUSSEAU,REMZI ARPACI-DUSSEAU,JOSEPH AUSTERWEIL,ERIC BACH,PAUL BARFORD,NIGEL BOSTON,JIN-YI CAI,SHUCHI CHAWLA,MARK CRAVEN,LORIS D'ANTONI,ALBERTO DEL PIA,COLIN DEWEY,ANHAI DOAN,CHARLES DYER,KASSEM FAWAZ,MICHAEL FERRIS,CHARLES FISCHER,ANTHONY GITTER,MICHAEL GLEICHER,MOHIT GUPTA,MARK D. HILL,JUSTIN HSU,YU HEN HU,SOMESH JHA,PARIS KOUTRIS,LAWRENCE LANDWEBER,LAURENT LESSARD,JANE LI,YIN LI,BEN LIBLIT,JEFFREY LINDEROTH,MIKKO LIPASTI,MIRON LIVNY,PO-LING LOH,JAMES LUEDTKE,BARTON MILLER,BILGE MUTLU,JEFFREY NAUGHTON,ROBERT NOWAK,DIMITRIS PAPAILIOPOULOS,JIGNESH PATEL,PARAMESWARAN RAMANATHAN,THEODOROS REKATSINAS,THOMAS REPS,STEPHEN ROBINSON,SUSHMITA ROY,JOSHUA SAN MIGUEL,KARTHIKEYAN SANKARALINGAM,VADIM SHAPIRO,JUDE SHAVLIK,MATTHEW SINCLAIR,VIKAS SINGH,MICHAEL SWIFT,CHRISTOS TZAMOS,SHIVARAM VENKATARAMAN,GRACE WAHBA,GRACE WAHBA,STEPHEN WRIGHT".split(","); <br>
&nbsp; let id = document.getElementById("id").value; <br>
&nbsp; let len = id.length; <br>
&nbsp; if (len >= 1) <br>
&nbsp; { <br>
&nbsp;&nbsp;&nbsp; let a = id.charCodeAt(0) % 10;&nbsp; <br>
&nbsp;&nbsp;&nbsp; document.getElementById("out").innerHTML = "Download the images of the following faculty members: " + list[a] + ", " + list[a + 10] + ", " + list[a + 20] + ", " + list[a + 30] + ", " + list[a + 40] + ", " + list[a + 50] + "."; <br>
&nbsp; } <br>
} <br>
</script>
(2) All images are 150 x 150, compute the pixel intensities as in the homework 2 (you can keep them as integers between 0 and 255), and store the grayscale images. <br>
(3) Compute HOG feature descriptors for the image: use 10 x 10 cells, 1 x 1 blocks, and 8 bins. <br>
<br>
&bull; Files to submit <br>
(1) <u><b>hog.png</b></u> or <u><b>hog.jpg</b></u> etc shows the feature descriptors of one of the images. <br>
(2) <u><b>output.txt</b></u> contains the flattened hog feature vectors of the 6 images, one image (or 15 x 15 x 8 numbers) per line, comma separated. <br>
(3) <u><b>comments.txt</b></u> contains information on how to run your program, in particular, the names of the data files are required. <br>
(4) code. <br>
<br>
&bull; Things to try <br>
(1) (Not required) Try smoothing with different Gaussian filters and compare the results. In particular, compare the results from the derivative filter and the Sobel filter. <br>
(2) (Not required) Try different number of bins besides 8. Please submit the version with 8 bins. <br>
(3) (Not required) Try 2 x 2 blocks to normalized the gradient magnitudes, it should yield better features. See the HOG paper for details. <br>
(4) Make sure the feature vectors look like the one in the following example. You can write your own code to create the image or use the canvas below the image. <br>
<img src="https://hypraptive.github.io/assets/find-the-bears/hog-example.png" alt="Example"> <br>
Input the number of cells (height x width): <input type="text", id="height", value="15", size="5"> x <input type="text", id="width", value="15", size="5"><br>
Input the number of bins: <input type="text", id="bins", value="8", size="5"><br>
Input the histogram values (comma seperated, all positive, right click to save the png image file): <input type="text", id="image", value="0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8"> <button onclick="clean()">Clear</button> <button onclick="draw()">GO</button><br>
The first canvas shows the correct version with opposite directions put in the same bin. The second canvas shows the incorrect version (due to my mistake in the hint file) with opposite directions in different bins.<br>
<canvas id="canvas" width="300" height="300" style="border:1px solid #000000;"></canvas><br><br><canvas id="canvas2" width="300" height="300" style="border:1px solid #000000;"></canvas><br>
<script>
function clean() <br>
{ <br>
&nbsp; document.getElementById("image").value = ""; <br>
} <br>
function draw() <br>
{ <br>
&nbsp; let canvas = document.getElementById("canvas"); <br>
&nbsp; let context = canvas.getContext("2d"); <br>
&nbsp; context.clearRect(0, 0, 300, 300); <br>
&nbsp; let canvas2 = document.getElementById("canvas2"); <br>
&nbsp; let context2 = canvas2.getContext("2d"); <br>
&nbsp; context2.clearRect(0, 0, 300, 300); <br>
&nbsp; let image = document.getElementById("image").value; <br>
&nbsp; let width = parseInt(document.getElementById("width").value); <br>
&nbsp; let height = parseInt(document.getElementById("height").value); <br>
&nbsp; let bins = parseInt(document.getElementById("bins").value); <br>
&nbsp; let split = image.split(",").map(Number); <br>
&nbsp; let maxmag = Math.max(...split); <br>
&nbsp; let dx = 300 / width; <br>
&nbsp; let dy = 300 / height; <br>
&nbsp; let dd = Math.min(dx, dy); <br>
&nbsp; let dp = dd / 20; <br>
&nbsp; let size = Math.min(split.length, width * height * bins); <br>
&nbsp; let mag = 0; <br>
&nbsp; size = size - size % bins; <br>
&nbsp; canvas.width = dd * width; <br>
&nbsp; canvas.height = dd * height; <br>
&nbsp; context.style = "black"; <br>
&nbsp; context.fillRect(0, 0, 300, 300); <br>
&nbsp; canvas2.width = dd * width; <br>
&nbsp; canvas2.height = dd * height; <br>
&nbsp; context2.style = "black"; <br>
&nbsp; context2.fillRect(0, 0, 300, 300); <br>
&nbsp; for (let i = 0; i < width * height * bins; i += bins) <br>
&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (let j = 0; j < bins; j ++) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mag = (split[(i + j) % size] / maxmag * 255) | 0; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context.save(); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context.fillStyle = "rgb(" + mag + "," + mag + "," + mag + ")"; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context.translate(dd * (0.5 + i / bins % width), dd * (0.5 + Math.floor(i / bins / width))); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context.rotate(-0.5 * (j + 0.5) * 360/bins * Math.PI/180); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context.fillRect(-0.5 * dd, -dp, 2 * 0.5 * dd , 2 * dp); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context.restore(); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context2.save(); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context2.fillStyle = "rgb(" + mag + "," + mag + "," + mag + ")"; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context2.translate(dd * (0.5 + i / bins % width), dd * (0.5 + Math.floor(i / bins / width))); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context2.rotate(-(j + 0.5) * 360/bins * Math.PI/180); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context2.fillRect(0, -dp, 0.5 * dd, 2 * dp); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context2.restore(); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br>
&nbsp; } <br>
} <br>
window.onload = function() {draw();}; <br>
</script>
<br>
More (nonessential) details and hints: <a href="CS540/CS540_P4.pdf">PDF</a>. <br>
<br>
&bull; TAs' Solution <br>
(1) Java: <a href="https://git.doit.wisc.edu/AINABEKOVA/cs-540-summer2019/tree/master/HW4" target="_blank">Link</a> written by Ainur <br>
(2) Python: <a href="https://git.doit.wisc.edu/DANDI.CHEN/cs540_2019summer/tree/master/hw4" target="_blank">Link</a> written by Dandi <br>
Important note: You are not allowed to copy any code from the solution. <a href="https://theory.stanford.edu/~aiken/moss/" target="_blank">MOSS</a> will be used check for code similarity: changing just variable names and the spacing etc is still considered cheating. You can read and learn what the solution is doing but you MUST write all code yourself. The deadline for resubmission without 50 percent penalty is July 7. <br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<font color="grey" size = 2> Last Updated: November 10, 2019 at 9:39 PM</font><br>
<br>
</div>
<div id="primarynavarea">
<ul id="primarynav">
<li><a href="CS540S19.htm"><span class="secondcolor"><strong>Home</strong></span></a></li>
<ul id="primarynavsub">
<li><a href="CS540W1S19.htm">Week 1 </a></li>
<li><a href="CS540W2S19.htm">Week 2 </a></li>
<li><a href="CS540W3S19.htm">Week 3 </a></li>
<li><a href="CS540W4S19.htm">Week 4 </a></li>
<li><a href="CS540W5S19.htm">Week 5 </a></li>
<li><a href="CS540W6S19.htm">Week 6 </a></li>
<li><a href="CS540W7S19.htm">Week 7 </a></li>
<li><a href="CS540W9S19.htm">Week 9 </a></li>
<li><a href="CS540W10S19.htm">Week 10 </a></li>
<li><a href="CS540W11S19.htm">Week 11 </a></li>
<li><a href="CS540W12S19.htm">Week 12 </a></li>
</ul>
<li><a href="CS540W8S19.htm">Midterm </a></li>
<li><a href="CS540W13S19.htm">Final </a></li>
</ul>
</div>
<div id="siteInfo">&nbsp;<img style="width: 191px; height: 65px;" alt="" src="image003.png">
</div>
</body>
</html>
