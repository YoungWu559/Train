<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-34711826-1', 'auto');
  ga('send', 'pageview');
</script>
<script src="YJS.js?0.37063474252356166" type="module" defer></script>
<script src="CS540.js?0.454684314595983" type="module" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/seedrandom.min.js"></script> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeric/1.2.6/numeric.min.js"></script>
<script src="https://unpkg.com/mathjs@6.1.0/dist/math.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<title>Young Wu's Homepage</title>
<link rel="shortcut icon" href="favicon.ico">
<link rel="stylesheet" href="style540.css" type="text/css">
</head>
<body>
<div id="masthead">
<h1 id="siteName">CS540 Summer 2021</h1>
</div> 
<div id="content">

<script type="module"> import {p4s21} from "./CS540.js"; p4s21() </script> <br>
Prev: <a href="CS540S21P3.htm">P3</a> Next: <a href="CS540S21P5.htm">P5</a> <br>
Back to week 5 page: <a href="CS540S21W5.htm">Link</a> <br>
<br>
<br>
<h2>P4 Programming Problem Instruction</h2>
&bull; Enter your ID (the wisc email ID without @wisc.edu) here: <input type="text" id="id" value="" size="20"> and click <button id="button_0">Confirm</button> (or hit enter key) <span hidden id="questions">1,2,3,4,5,6,7,8,9,10</span> <span hidden id="assignment">p4</span> <br>
&bull; The official deadline is August 1, but you can submit or resubmit without penalty until August 15. <br>
&bull; The same ID should generate the same set of questions. Your answers are not saved when you close the browser. You could either copy and paste or load your program outputs into the text boxes for individual questions or print all your outputs to a single text file and load it using the button at the bottom of the page. <br>
&bull; Please do not refresh the page: your answers will not be saved. <br>
&bull; You should implement the algorithms using the mathematical formulas from the slides. You can use packages and libraries to preprocess and read the data and format the outputs. It is not recommended that you use machine learning packages or libraries, but you will not lose points for doing so. <br>
&bull; Please report any bugs on Piazza. <br>
<br>
<h2><span id="id_warning"><font color="red"> Warning: please enter your ID before you start! </font></span></h2>
<br>
<span hidden id="store">1:original;2:difference;4:parameters;5:hacs;6:hacc;7:kmeans;8:centers</span> <br>
&bull; (Introduction) In this programming homework, you cluster US states into groups with the COVID-19 dataset. You will estimate parametric models of virus spread and cluster the states using these parameters as features. <br>
<br>
&bull; (Part 1) Download the US COVID-19 deaths dataset from Johns Hopkins University: <a href="https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series" target="_blank">Link</a>, the dataset "time_series_covid19_deaths_US.csv". It is okay if you use another similar time-series datasets on COVID-19 deaths that you trust. <br>
<br>
&bull; (Part 1) Estimate a parametric model that describes the trend. There should be at least 5 parameters, but preferably less than 10. For a more accurate model, you should divide the number of deaths by the total population of the state, you can use the "Population" column in the Johns Hopkins dataset, or use another dataset, for example, <a href="https://simple.wikipedia.org/wiki/List_of_U.S._states_by_population" target="_blank">Wikipedia</a>. Also remember to rescale the parameters so that they have the same range. The list of parameters you could estimate: <br>
(1) Descriptive statistics for the time-differenced data: for example, mean, variance, standard deviation, median, selected percentiles, max, etc. Some statistics such as mode and min might produce the same value for all states, please do not use those parameters. <br>
(2) Maximum likelihood estimates of parametric models, for example, \(\hat{\mu}\) and \(\hat{\sigma}\) for a normal distribution, or \(\hat{\lambda}\) for a Poisson distribution. You can use a combination of the parameters from multiple models. <br>
(3) Direct estimate the growth rates by counting the number of days to double, quadruple, and octuple, etc: see Professor Zhu's Ten Hundred Plot for a two-parameter version: <a href="https://www.youtube.com/watch?v=NP3ZdQwrL_Q&t=0s" target="_blank">Link</a>. <br>
(4) Estimation of trends using curve-fitting algorithms, for example, linear regression coefficients for time, squared time, cubed time, etc. <br>
(5) Other reasonable or creative parameters are acceptable as long as it is NOT something trivial like "use the last three numbers in the row" or "count the number of days cases increase more than 10, 100, 1000" or something similar to the TA's solution. <br>
<br>
&bull; (Part 2) Use hierarchical clustering with single and complete linkages to cluster the states into \(k\) = <span id="nc_0"></span> clusters based on their parameter values. Use Euclidean distance. <br>
<br>
&bull; (Part 2) Use k-means clustering to cluster the states into the same number of clusters based on their parameter values. Compute final the cluster centers and the total distortion. Use Euclidean distance. <br>
<br>
<h2>Question 1</h2>
&bull; [<span id="total_1">1</span> points] Enter the cumulative time series for the Wisconsin and another state of your choice (two lines, each line containing integers, comma separated). <br>
<details>
<summary>Hint</summary>
You should add up the rows for the same state. <br>
</details>
<input type="file", id="original_input", accept='text/plain'><br><textarea id="original"></textarea> <br>
<span hidden id="answer_1"></span> <br>
<br>
<h2>Question 2</h2>
&bull; [<span id="total_2">2</span> points] Enter the differenced time series for Wisconsin and the other state you chose (compute the difference between consecutive numbers in the previous question, here, this time series represents the number of additional deaths each day) (two lines, each line containing integers, one less than the number of integers per line in the previous question, comma separated). <br>
<input type="file", id="difference_input", accept='text/plain'><br><textarea id="difference"></textarea> <br>
<span hidden id="answer_2"></span> <br>
<br>
<h2>Question 3</h2>
&bull; [<span id="total_3">5</span> points] Enter the list of parameters you estimated. Include a brief description if the parameter is not from items (1) to (4). This question may be regraded manually. <br>
<textarea id="answer_3" rows="2" cols="20"></textarea> <br>
<br>
<h2>Question 4</h2>
&bull; [<span id="total_4">5</span> points] Input the parameter estimates as a matrix, one row for each state (~50 lines, each line contains at least 5 numbers, comma separated, rounded to 2 decimal places). Call the number of row \(n\) and the number of columns \(m\) for later questions. Make sure you rescale the parameters so that they have the same range and please do not include an index column or a column with state names etc. <br>
<input type="file", id="parameters_input", accept='text/plain'><br><textarea id="parameters"></textarea> <br>
<span hidden id="answer_4"></span> <br>
<br>
<h2>Question 5</h2>
&bull; [<span id="total_5">10</span> points] Input the clusters from single linkage hierarchical clustering (one line containing \(n\) integers from \(0\) to the \(k-1\), comma separated). <br>
<details>
<summary>Hint</summary>
&bull; Start with \(n\) clusters. <br>
&bull; Compute the distances between each pair of clusters, \(C_{i}\), \(C_{j}\) by, <br>
\(d\left(C_{i}, C_{j}\right) = \displaystyle\min\left\{ \left\|x_{i}, x_{j}\right\| : x_{i} \in C_{i}, x_{j} \in C_{j}\right\}\). <br>
&bull; Merge the pair with the smallest distance between them. <br>
&bull; Continue until there are only \(k\) clusters. <br>
</details>
<input type="file", id="hacs_input", accept='text/plain'><br><textarea id="hacs"></textarea> <br>
<span hidden id="answer_5"></span> <br>
<br>
<h2>Question 6</h2>
&bull; [<span id="total_6">10</span> points] Input the clusters from complete linkage hierarchical clustering (one line containing \(n\) integers from \(0\) to the \(k-1\), comma separated). <br>
<details>
<summary>Hint</summary>
&bull; Start with \(n\) clusters. <br>
&bull; Compute the distances between each pair of clusters, \(C_{i}\), \(C_{j}\) by, <br>
\(d\left(C_{i}, C_{j}\right) = \displaystyle\max\left\{ \left\|x_{i}, x_{j}\right\| : x_{i} \in C_{i}, x_{j} \in C_{j}\right\}\). <br>
&bull; Merge the pair with the smallest distance between them. <br>
&bull; Continue until there are only \(k\) clusters. <br>
</details>
<input type="file", id="hacc_input", accept='text/plain'><br><textarea id="hacc"></textarea> <br>
<span hidden id="answer_6"></span> <br>
<br>
<h2>Question 7</h2>
&bull; [<span id="total_7">10</span> points] Input the clusters from k means clustering (one line containing \(n\) integers from \(0\) to the \(k-1\), comma separated). <br>
<details>
<summary>Hint</summary>
&bull; Start with k random points in the dataset as the cluster centers \(c_{1}, c_{2}, ..., c_{k}\). <br>
&bull; Compute the clusters for each point \(x_{i}\) by finding \(k\) such that \(c_{k}\) is the closest (among the \(k\) centers) to \(x_{i}\). <br>
&bull; Recompute the cluster centers, <br>
\(c_{k} = \dfrac{1}{\left| C_{k} \right|} \displaystyle\sum_{x_{i} \in C_{k}} x_{i}\), \(C_{k}\) is the set of points in cluster \(k\). <br>
&bull; Repeat until the cluster centers do not change. <br>
</details>
<input type="file", id="kmeans_input", accept='text/plain'><br><textarea id="kmeans"></textarea> <br>
<span hidden id="answer_7"></span> <br>
<br>
<h2>Question 8</h2>
&bull; [<span id="total_8">5</span> points] Enter the cluster centers from k means clustering (\(k\) lines, each line containing \(m\) numbers, comma separated, rounded to 4 decimal places). <br>
<details>
<summary>Hint</summary>
See the hints for the previous question. <br>
</details>
<input type="file", id="centers_input", accept='text/plain'><br><textarea id="centers"></textarea> <br>
<span hidden id="answer_8"></span> <br>
<br>
<h2>Question 9</h2>
&bull; [<span id="total_9">5</span> points] Enter the total distortion (use sum of squared distances) of the clustering from the previous two questions. <br>
<details>
<summary>Hint</summary>
&bull; Total distortion is the sum of the squares of distances from the points to the cluster center, <br>
\(D = \displaystyle\sum_{i=1}^{n} \left\|x_{i}, c_{k_{i}}\left(x_{i}\right)\right\|\), \(x_{i}\) belongs to the cluster \(k_{i}\). <br>
</details>
<input type="text" id="answer_9" value="" size="20"> <br>
<br>
<h2>Question 10</h2>
&bull; [<span id="total_10">1</span> points] Please enter any comments and suggestions including possible mistakes and bugs with the questions and the auto-grading, and materials relevant to solving the question that you think are not covered well during the lectures. If you have no comments, please enter "None": do not leave it blank. <br>
&bull; Answer: <textarea id="answer_10" rows="2" cols="20"></textarea>. <br>
<br>
<h2>Grade</h2>
<button id="button_1">Grade</button> <br>
&nbsp;***** ***** ***** ***** *****&nbsp; <br>
<span id="comment"></span> <br>
&nbsp;***** ***** ***** ***** ***** <br>
<br>
<h2>Submission</h2>
<textarea id="output" rows="4" cols="40"></textarea> <br>
&bull; Please do not modify the content in the above text field: use the "Grade" button to update. <br>
&bull; Warning: grading may take around 10 to 20 seconds. Please be patient and do not click "Grade" multiple times. <br>
<form name="submit_form">
<input type="hidden" id="submit_id" name="id">
<input type="hidden" id="submit_n" name="n">
<input type="hidden" id="submit_a1" name="a1">
<input type="hidden" id="submit_a2" name="a2">
<input type="hidden" id="submit_a3" name="a3">
<input type="hidden" id="submit_a4" name="a4">
<input type="hidden" id="submit_a5" name="a5">
<input type="hidden" id="submit_a6" name="a6">
<input type="hidden" id="submit_a7" name="a7">
<input type="hidden" id="submit_a8" name="a8">
<input type="hidden" id="submit_a9" name="a9">
<input type="hidden" id="submit_a10" name="a10">
<input type="hidden" id="submit_g1" name="g1">
<input type="hidden" id="submit_g2" name="g2">
<input type="hidden" id="submit_g3" name="g3">
<input type="hidden" id="submit_g4" name="g4">
<input type="hidden" id="submit_g5" name="g5">
<input type="hidden" id="submit_g6" name="g6">
<input type="hidden" id="submit_g7" name="g7">
<input type="hidden" id="submit_g8" name="g8">
<input type="hidden" id="submit_g9" name="g9">
<input type="hidden" id="submit_g10" name="g10">
<input type="hidden" id="submit_g" name="g">
<input type="checkbox" id="submit_check"> <label for="submit_check">Check the box to confirm submission.</label><br>
<button type="submit">Submit</button>
<span id="submit_message"></span>
</form>
 <br>
&bull; You could submit multiple times (but please do not submit too often): only the latest submission will be counted.&nbsp; <br>
&bull; Please also save the text in the above text box to a file using the button <button id="button_2">Download</button> or copy and paste it into a file yourself <button id="button_3">Copy</button>. <font color="red"> Please submit the resulting file with your code on Canvas Assignment P4</font>. <br>
&bull; You could load your answers from the text (or txt file) in the text box below using the button <button id="button_4">Load</button>. The first two lines should be "##p: 4" and "##id: your id", and the format of the remaining lines should be "##1: your answer to question 1" newline "##2: your answer to question 2", etc. Please make sure that your answers are loaded correctly before submitting them. <br>
<input type="file", id="loading_input", accept='text/plain'><br><textarea id="loading"></textarea> <br>
&bull; Saving and loading may take around 10 to 20 seconds. Please be patient and do not click "Load" multiple times. <br>
<br>
<h2>Solutions</h2>
&bull; The sample solution in Java and Python will be posted around the deadline. You are allowed to copy and use parts of the solution without attribution. You are allowed to use code from other people and from the Internet, but you must give proper attribution at the beginning of the your code. <a href="https://theory.stanford.edu/~aiken/moss/" target="_blank">MOSS</a> will be used for code plagiarism check: blocks of copied code without attribution will result in a zero for the whole assignment. <br>
&bull; Sample solution from last year: <a href="CS540P4S20E">2020 P4</a>. The homework is slightly different, please use with caution. <br>
&bull; Sample solution: TBA. <br>
&bull; You can get help on understanding the algorithm from any of the office hours. To get help with debugging code in Java, please come during the Monday to Friday 2:00 to 3:00 Zoom office hours or Saturday to Sunday 2:00 to 3:00 (I can stay for a few hours after 3:00 by appointment) in-person office hours. To get help with debugging code in Python, please come during the Tuesday 3:00 to 5:00 in-person office hours or the Thursday 3:00 to 5:00 Zoom office hours. You are encouraged to work with other students, but if you use their code, you must give attribution at the beginning of your code. <br>
<script type="module"> 
import {enter_button, gen_questions, read_file, grade, submit_file, download_file, clipboard, load_ans_page} from "./YJS.js";
document.getElementById("button_0").onclick = () => gen_questions();
enter_button("@id", "button_0");
document.getElementById("original_input").onchange = () => read_file(event, "original");
document.getElementById("difference_input").onchange = () => read_file(event, "difference");
document.getElementById("parameters_input").onchange = () => read_file(event, "parameters");
document.getElementById("hacs_input").onchange = () => read_file(event, "hacs");
document.getElementById("hacc_input").onchange = () => read_file(event, "hacc");
document.getElementById("kmeans_input").onchange = () => read_file(event, "kmeans");
document.getElementById("centers_input").onchange = () => read_file(event, "centers");
document.getElementById("button_1").onclick = () => grade();
submit_file("submit_form", "https://script.google.com/macros/s/AKfycbzEMQVs77vGDr1PxAnN4kvC0Vi49dVXxKYjhNc6lKnex4HrMPjV/exec", "@submit_message", "@submit_check", "@submit_id");
document.getElementById("button_2").onclick = () => download_file("@output", "P4");
document.getElementById("button_3").onclick = () => clipboard("@output");
document.getElementById("button_4").onclick = () => load_ans_page("@loading");
document.getElementById("loading_input").onchange = () => read_file(event, "loading");
</script><br>
<br>
<br>
<br>
<br>
<font color="grey" size = 2> Last Updated: July 23, 2021 at 6:08 PM</font><br>
<br>
</div>
<div id="primarynavarea">
<ul id="primarynav">
<li><a href="CS540S21.htm"><span class="secondcolor"><strong>Home</strong></span></a></li>
<ul id="primarynavsub">
<li><a href="CS540S21W1.htm">Week 1 </a></li>
<li><a href="CS540S21W2.htm">Week 2 </a></li>
<li><a href="CS540S21W3.htm">Week 3 </a></li>
<li><a href="CS540S21W5.htm">Week 5 </a></li>
<li><a href="CS540S21W6.htm">Week 6 </a></li>
<li><a href="CS540S21W7.htm">Week 7 </a></li>
</ul>
<li><a href="CS540S21W4.htm">Midterm </a></li>
<li><a href="CS540S21W8.htm">Final </a></li>
</ul>
</div>
<div id="siteInfo">&nbsp;<img style="width: 191px; height: 65px;" alt="" src="image003.png">
</div>
</body>
</html>

