<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-34711826-1', 'auto');
  ga('send', 'pageview');
</script>
<script src="YJS.js?0.7994765104270283" type="model" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeric/1.2.6/numeric.min.js"></script>
<script src="https://unpkg.com/mathjs@6.1.0/dist/math.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<title>Young Wu's Homepage</title>
<link rel="shortcut icon" href="favicon.ico">
<link rel="stylesheet" href="style540.css" type="text/css">
</head>
<body>
<div id="masthead">
<h1 id="siteName">CS540 Summer 2019</h1>
</div> 
<div id="content">
<a href="CS540W5S19.htm">Prev: W5</a> ; <a href="CS540W7S19.htm">Next: W7</a> <br>
<br>
<h2>Lecture Note</h2>
&bull; Slides <br>
Lecture 11: <a href="CS540/CS540_Lecture_11_P.pdf">Slides</a>, <a href="CS540/CS540_Lecture_11_C.pdf">With Quiz</a> <br>
Lecture 12: <a href="CS540/CS540_Lecture_12_P.pdf">Slides</a>, <a href="CS540/CS540_Lecture_12_C.pdf">With Quiz</a> <br>
Annotated Lecture 11 Section 1: <a href="CS540/CS540_Lecture_11_C1.pdf">Slides</a> <br>
Annotated Lecture 12 Section 1: <a href="CS540/CS540_Lecture_12_C1.pdf">Slides</a> <br>
Annotated Week 6 Section 2: <a href="CS540/CS540_Lecture_11_C2.pdf">Part I</a>, <a href="CS540/CS540_Lecture_12_C2.pdf">Part II</a> <br>
<br>
&bull; Websites <br>
Image Segmentation: <a href="http://www.fexovi.com/sefexa.html" target="_blank">Link 1</a>, <a href="http://deepscene.cs.uni-freiburg.de/" target="_blank">Link 2</a> <br>
K Means Clustering: <a href="https://www.naftaliharris.com/blog/visualizing-k-means-clustering/" target="_blank">Link</a> <br>
K Gaussian Mixture: <a href="http://jormungand.net/projects/misc/em/" target="_blank">Link</a> <br>
Tree of Life: <a href="http://tolweb.org/Life_on_Earth/1" target="_blank">Link 1</a>, <a href="https://www.onezoom.org/" target="_blank">Link 2</a> <br>
Generative Adversarial Net: <a href="https://www.freecodecamp.org/news/an-intuitive-introduction-to-generative-adversarial-networks-gans-7a2264a81394/" target="_blank">Link</a>&nbsp; <br>
Principal Component: <a href="http://setosa.io/ev/principal-component-analysis/" target="_blank">Link 1</a>, <a href="https://projector.tensorflow.org/" target="_blank">Link 2</a> <br>
Eigen Face: <a href="https://scipy-lectures.org/packages/scikit-learn/auto_examples/plot_eigenfaces.html" target="_blank">Link 1</a>, <a href="https://wellecks.wordpress.com/tag/eigenfaces/" target="_blank">Link 2</a> <br>
t-distributed Stochastic Neighbor Embedding: <a href="https://ai.googleblog.com/2018/06/realtime-tsne-visualizations-with.html" target="_blank">Link</a> <br>
Swiss Roll: <a href="https://cs.nyu.edu/~roweis/lle/swissroll.html" target="_blank">Link</a> <br>
tSNE Demmo: <a href="https://distill.pub/2016/misread-tsne/" target="_blank">Link</a> <br>
PCA Proofs from Professor Jerry Zhu's 540 notes: <a href="http://pages.cs.wisc.edu/~jerryzhu/cs540/handouts/PCA.pdf" target="_blank">PDF File</a> <br>
<br>
&bull; YouTube Videos <br>
What is the relationship between Naive Bayes and Logistic Regression? <a href="https://youtu.be/_1VaAYAuMtk" target="_blank">Link</a> <br>
What is the relationship between K Means and Gradient Descent? <a href="https://youtu.be/xm_pJO8DrLM" target="_blank">Link</a> <br>
Why is PCA solving eigenvalues and eigenvectors? <a href="https://youtu.be/zhn9bxobnhk" target="_blank">Part 1</a>, <a href="https://youtu.be/gH83oAmTRNM" target="_blank">Part 2</a>, <a href="https://youtu.be/mxv2oefVg3U" target="_blank">Part 3</a> <br>
How to update distance table for hierachical clustering? <a href="https://youtu.be/WEXzEeq3WYg" target="_blank">Link</a> <br>
How to update cluster centers for K-means clustering? <a href="https://youtu.be/xmfQQceyIDk" target="_blank">Link</a> <br>
How to compute projection? <a href="https://youtu.be/94zlxaze3fw" target="_blank">Link</a> <br>
How to compute new features based on PCA? <a href="https://youtu.be/WgrqyTJtgXM" target="_blank">Link</a> <br>
<br>
<h2>Written (Math) Problems</h2>
Submit on Canvas: <a href="CS540/CS540_M6.pdf">PDF</a> <br>
<br>
<h2>Programming Problem</h2>
&bull; Short Instruction <br>
(1) Download one set of drawings from <a href="https://quickdraw.withgoogle.com/data" target="_blank">Quick Draw</a>.&nbsp; Download the category according to your wisc ID: <br>
Type in your ID: <input type="text", id="id"> <button onclick="get()">GO</button><br>
<span id="out">Download ONE of the following categories: </span><br>&nbsp; <br>
<script>
function get() <br>
{ <br>
&nbsp; let list = "aircraft carrier, airplane, alarm clock, ambulance, angel, animal migration, ant, anvil, apple, arm, asparagus, axe, backpack, banana, bandage, barn, baseball, baseball bat, basket, basketball, bat, bathtub, beach, bear, beard, bed, bee, belt, bench, bicycle, binoculars, bird, birthday cake, blackberry, blueberry, book, boomerang, bottlecap, bowtie, bracelet, brain, bread, bridge, broccoli, broom, bucket, bulldozer, bus, bush, butterfly, cactus, cake, calculator, calendar, camel, camera, camouflage, campfire, candle, cannon, canoe, car, carrot, castle, cat, ceiling fan, cello, cell phone, chair, chandelier, church, circle, clarinet, clock, cloud, coffee cup, compass, computer, cookie, cooler, couch, cow, crab, crayon, crocodile, crown, cruise ship, cup, diamond, dishwasher, diving board, dog, dolphin, donut, door, dragon, dresser, drill, drums, duck, dumbbell, ear, elbow, elephant, envelope, eraser, eye, eyeglasses, face, fan, feather, fence, finger, fire hydrant, fireplace, firetruck, fish, flamingo, flashlight, flip flops, floor lamp, flower, flying saucer, foot, fork, frog, frying pan, garden, garden hose, giraffe, goatee, golf club, grapes, grass, guitar, hamburger, hammer, hand, harp, hat, headphones, hedgehog, helicopter, helmet, hexagon, hockey puck, hockey stick, horse, hospital, hot air balloon, hot dog, hot tub, hourglass, house, house plant, hurricane, ice cream, jacket, jail, kangaroo, key, keyboard, knee, knife, ladder, lantern, laptop, leaf, leg, light bulb, lighter, lighthouse, lightning, line, lion, lipstick, lobster, lollipop, mailbox, map, marker, matches, megaphone, mermaid, microphone, microwave, monkey, moon, mosquito, motorbike, mountain, mouse, moustache, mouth, mug, mushroom, nail, necklace, nose, ocean, octagon, octopus, onion, oven, owl, paintbrush, paint can, palm tree, panda, pants, paper clip, parachute, parrot, passport, peanut, pear, peas, pencil, penguin, piano, pickup truck, picture frame, pig, pillow, pineapple, pizza, pliers, police car, pond, pool, popsicle, postcard, potato, power outlet, purse, rabbit, raccoon, radio, rain, rainbow, rake, remote control, rhinoceros, rifle, river, roller coaster, rollerskates, sailboat, sandwich, saw, saxophone, school bus, scissors, scorpion, screwdriver, sea turtle, see saw, shark, sheep, shoe, shorts, shovel, sink, skateboard, skull, skyscraper, sleeping bag, smiley face, snail, snake, snorkel, snowflake, snowman, soccer ball, sock, speedboat, spider, spoon, spreadsheet, square, squiggle, squirrel, stairs, star, steak, stereo, stethoscope, stitches, stop sign, stove, strawberry, streetlight, string bean, submarine, suitcase, sun, swan, sweater, swing set, sword, syringe, table, teapot, teddy-bear, telephone, television, tennis racquet, tent, The Eiffel Tower, The Great Wall of China, The Mona Lisa, tiger, toaster, toe, toilet, tooth, toothbrush, toothpaste, tornado, tractor, traffic light, train, tree, triangle, trombone, truck, trumpet, t-shirt, umbrella, underwear, van, vase, violin, washing machine, watermelon, waterslide, whale, wheel, windmill, wine bottle, wine glass, wristwatch, yoga, zebra, zigzag".split(","); <br>
&nbsp; let id = document.getElementById("id").value; <br>
&nbsp; let len = id.length; <br>
&nbsp; if (len >= 2) <br>
&nbsp; { <br>
&nbsp;&nbsp;&nbsp; let a = (id.charCodeAt(0) % 10) * 10 + id.charCodeAt(0) % 10; <br>
&nbsp;&nbsp;&nbsp; document.getElementById("out").innerHTML = "Download ONE of the following categories: " + list[a] + ", " + list[a + 100] + ", " + list[a + 200] + "."; <br>
&nbsp; } <br>
} <br>
</script>
Download the simplified drawings files (.ndjson) or the binary files (.bin) from <a href="https://github.com/googlecreativelab/quickdraw-dataset" target="_blank">Link</a>. Extract the first 1000 images and normalize so that they have the same length. You can use more images. <br>
(2) Use K-means clustering to group the images into groups labelled 1, 2, ..., K. K should be between 5 and 10. <br>
<br>
<img src="https://typeset-beta.imgix.net/lovelace/uploads/2143/bee8e430-93b6-0134-ce68-0aec1efe63a9.png" alt="Quick" style="width:300px; height:126px"> <br>
<br>
&bull; Files to submit <br>
(1) <b><u>mean_1.png</b></u>, <b><u>mean_2.png</b></u> ... etc (2 is enough) images of means of the clusters. Update: no need to submit variances. You can use your code to plot the means or use the canvas below to plot them. <br>
(2) <b><u>output.txt</b></u> contains the list of group labels, one number per line, 1000 lines. <br>
(3) <u><b>comments.txt</b></u> contains information on how to run your program, in particular, the names of the data files are required. <br>
(4) code. <br>
<br>
&bull; Things to try <br>
(1) There are two ways to normalize the drawings: (a) systematically subsample (x, y) from the drawing, (b) rasterize the image and use pixel intensity. <br>
(2) Repeat the process for different initial centers. <br>
(3) Experiment with various number of clusters. <br>
(4) Plot either the points below or the pixels using the canvas on <a href="CS540W1.htm">W1</a> with pixel intensities (0 to 1) or <a href="CS540W2.htm">W2</a> with pixel gray values (0 to 255). <br>
Input the strokes in the format x_1, y_1, x_2, y_2, ... (comma seperated, each number between 0 and 255, right click to save the png image file): <input type="text", id="image", value="1,1,254,254"> <button onclick="clean()">Clear</button> <button onclick="draw()">GO</button><br>
<canvas id="canvas" width="255" height="255" style="border:1px solid #000000;"></canvas><br>
<script>
function clean() <br>
{ <br>
&nbsp; document.getElementById("image").value = ""; <br>
} <br>
function draw() <br>
{ <br>
&nbsp; let canvas = document.getElementById("canvas"); <br>
&nbsp; let context = canvas.getContext("2d"); <br>
&nbsp; context.clearRect(0, 0, 255, 255); <br>
&nbsp; let image = document.getElementById("image").value; <br>
&nbsp; let split = image.split(","); <br>
&nbsp; if (split.length > 2) <br>
&nbsp; { <br>
&nbsp;&nbsp;&nbsp; context.lineWidth = 2; <br>
&nbsp;&nbsp;&nbsp; context.beginPath(); <br>
&nbsp;&nbsp;&nbsp; context.moveTo(Number(split[0]), Number(split[1])); <br>
&nbsp;&nbsp;&nbsp; for (let i = 2; i < split.length; i += 2) context.lineTo(Number(split[i]), Number(split[i + 1])); <br>
&nbsp;&nbsp;&nbsp; context.stroke(); <br>
&nbsp; } <br>
} <br>
window.onload = function() {draw();}; <br>
</script>
<br>
More (nonessential) details and hints: <a href="CS540/CS540_P6.pdf">PDF</a>. <br>
<br>
&bull; TAs' Solution <br>
(1) Java: <a href="https://git.doit.wisc.edu/AINABEKOVA/cs-540-summer2019/tree/master/HW6" target="_blank">Link</a> written by Ainur <br>
(2) Python: <a href="https://git.doit.wisc.edu/DANDI.CHEN/cs540_2019summer/tree/master/hw6" target="_blank">Link</a> written by Dandi <br>
Important note: You are not allowed to copy any code from the solution. <a href="https://theory.stanford.edu/~aiken/moss/" target="_blank">MOSS</a> will be used check for code similarity: changing just variable names and the spacing etc is still considered cheating. You can read and learn what the solution is doing but you MUST write all code yourself. The deadline for resubmission without 50 percent penalty is July 21. <br>
<br>
<br>
<br>
<br>
<br>
<font color="grey" size = 2> Last Updated: November 10, 2019 at 9:39 PM</font><br>
<br>
</div>
<div id="primarynavarea">
<ul id="primarynav">
<li><a href="CS540S19.htm"><span class="secondcolor"><strong>Home</strong></span></a></li>
<ul id="primarynavsub">
<li><a href="CS540W1S19.htm">Week 1 </a></li>
<li><a href="CS540W2S19.htm">Week 2 </a></li>
<li><a href="CS540W3S19.htm">Week 3 </a></li>
<li><a href="CS540W4S19.htm">Week 4 </a></li>
<li><a href="CS540W5S19.htm">Week 5 </a></li>
<li><a href="CS540W6S19.htm">Week 6 </a></li>
<li><a href="CS540W7S19.htm">Week 7 </a></li>
<li><a href="CS540W9S19.htm">Week 9 </a></li>
<li><a href="CS540W10S19.htm">Week 10 </a></li>
<li><a href="CS540W11S19.htm">Week 11 </a></li>
<li><a href="CS540W12S19.htm">Week 12 </a></li>
</ul>
<li><a href="CS540W8S19.htm">Midterm </a></li>
<li><a href="CS540W13S19.htm">Final </a></li>
</ul>
</div>
<div id="siteInfo">&nbsp;<img style="width: 191px; height: 65px;" alt="" src="image003.png">
</div>
</body>
</html>
